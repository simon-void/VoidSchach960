optimizations:
-is isNotBound easier to compute than !isBound??
-get possibleMoves shouldn't iterate over every reachable move in case of checkLines or boundLines
-a StaticChessBoard with optimized and immutable data structure for StaticEvaluation
-are type checks (e.g. is King) slower that isKing(), isQueen, ... calls?? If not remove those functions
-is there an efficient way to compute if a pawn is a passed pawn?? (because there should be a passed-pawn bonus)

features:
- bundle with minimal JRE (see https://badass-runtime-plugin.beryx.org/releases/latest/)
- resizable interface (inclusive full-screen)
- pure chess engine module with 2-way channels (so different engines (written e.g. in Go, Rust, ...) can be used)
-> AWS lambda version of chess engine which computes each possible move in parallel (Step Functions)

bugs:
- fix on JDK>8 (can't read files from jar file, probably because of module stuff)